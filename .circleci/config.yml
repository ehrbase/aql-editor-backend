version: 2.1

workflows:
    version: 2
    build_and_test:
        jobs:
            - test:
                  context: org-global
            - tag-version:
                  requires:
                      - test
                  filters:
                      branches:
                          only:
                              - /^(release\/v\d+\.\d+\.\d+|hotfix\/v\d+\.\d+\.\d+)$/
            - build_and_deploy:
                  context: org-global
                  requires:
                      - test
                  filters:
                      branches:
                          only:
                              - /^(release\/v\d+\.\d+\.\d+|hotfix\/v\d+\.\d+\.\d+|master|develop)$/
            - merge_to_nightly_build:
                triggers:
                    - schedule:
                        cron: "0 21 * * *"
                context: org-global
                requires:
                      - test
                filters:
                    branches:
                        only:
                            - master
jobs:
    test:
        docker:
            - image: circleci/openjdk:stretch
        steps:
            - checkout
            - cache-out-maven-dependencies
            - run:
                  name: Run unit tests and CVE scan
                  command:  ./mvnw clean verify
            - run:
                  name: Save test results
                  command: |
                      mkdir -p ~/test-results/junit/
                      find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
                  when: always
            - store_artifacts:
                  path: target/site
            - store_artifacts:
                  path: target/dependency-check-report.html
            - store_test_results:
                  path: ~/test-results
            - cache-in-maven-dependencies
    tag-version:
        docker:
            - image: circleci/openjdk:stretch
        steps:
            - checkout
            - configure-git-for-ci-bot
            - run:
                  name: Update Snapshot Develop Version
                  description: |
                      This automatically bumps the application version when there is a commit to release or hotfix branch.
                      The version is parsed from the branchname, where everything after /v separator (e.g. 1.0.0 would be parsed from
                      release/v1.0.0) will be stored as a version number in pom file, and we will simultaneously create a tag that
                      has the same version number, but it is there also prefixed with v (like this v1.0.0)
                  command: |
                      VERSION_NUMBER="$(echo $CIRCLE_BRANCH | awk -F'/v' '{print $2;}')"
                      echo "Updating the application version from the branch to ${VERSION_NUMBER}"
                      ./mvnw versions:set -DnewVersion=$VERSION_NUMBER versions:commit

                      git commit -am "updated patch version to v${VERSION_NUMBER} [skip ci]"
                      git tag -a v$VERSION_NUMBER -m "aql-editor release version v${VERSION_NUMBER}"
                      git push --set-upstream origin $CIRCLE_BRANCH
                      git push origin --tags

                      exit 0
                      esac

    build_and_deploy:
      docker:
        - image: cimg/openjdk:11.0.8
          auth:
            username: $DOCKER_USER
            password: $DOCKER_HUB_PASSWORD
      steps:
        - checkout
        - configure-git-for-ci-bot
        - cache-out-maven-dependencies
        - setup_remote_docker:
            version: 19.03.13
        - run:
            name: Build and tag image and push
            command: |
              if [ $CIRCLE_BRANCH = "master" ]; then
                  TAG=$(./mvnw -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
              elif [ $CIRCLE_BRANCH = "develop" ]; then
                  TAG="next"
              else
                  TAG="$(echo $CIRCLE_BRANCH | awk -F'/' '{print $2;}')-rc"
              fi
              echo "Publishing Docker image with following tag: ${TAG}"
              echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
              ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=ehrbase/aql-editor:$TAG -Dmaven.test.skip
              docker push ehrbase/aql-editor:$TAG
    
    merge_to_nightly_build:
      docker:
            - image: circleci/openjdk:stretch
      steps:
        - run:
              name: Merge master to nightly-builds branch
              command: |
                      - git checkout master
                      - git pull
                      - git checkout nightly-builds
                      - git merge master

commands:
    configure-git-for-ci-bot:
        steps:
            - add_ssh_keys:
                  fingerprints:
                      - 0c:dd:08:d5:13:cf:20:3c:25:c4:f3:59:a8:a5:c4:36
            - run:
                  name: Configure GIT
                  command: |
                      git config --global user.email "50235421+ehrbase-tech-user@users.noreply.github.com"
                      git config --global user.name "ci-bot"
                      git remote -v


    cache-out-maven-dependencies:
        steps:
            - run:
                  name: Generate Cache Checksum for Maven Dependencies
                  command: find /home/circleci/project -name 'pom.xml' | sort | xargs cat > /tmp/aql-editor_maven_cache_seed
            - restore_cache:
                  key: v1-aql-editor-deps-

    cache-in-maven-dependencies:
        steps:
            - save_cache:
                  key: v1-aql-editor-deps-{{ checksum "/tmp/aql-editor_maven_cache_seed" }}
                  paths:
                      - ~/.m2
